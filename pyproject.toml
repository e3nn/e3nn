[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name="e3nn"
requires-python = ">=3.7"
dynamic = ["version", "readme"]
license = {text = "MIT"}
description = "Equivariant convolutional neural networks for the group E(3) of 3 dimensional rotations, translations, and mirrors."
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX",
  "Operating System :: MacOS",
]
dependencies = [
  "sympy",
  "scipy",
  "torch>=1.8.0",
  "opt_einsum_fx>=0.1.4"
]

[project.optional-dependencies]
dev = [
  "pytest",
  "pre-commit",
]

[project.urls]
homepage = "https://e3nn.org"
documentation = "https://docs.e3nn.org/"
repository = "https://github.com/e3nn/e3nn.git"
changelog = "https://github.com/e3nn/e3nn/blob/main/.github/CHANGELOG.md"

[tool.setuptools.packages.find]
exclude = [
  "tests",
  "tests.*",
]

[tool.setuptools.dynamic]
version = {attr = "e3nn.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.black]
line-length = 127
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 127
max-complexity = 21
select = ["B", "C", "E", "F", "W", "T4", "B9"]
ignore = [
    "E741",
    "E203",
    "W503",
    "C901"
]
exclude = [
  ".eggs",
  "*.egg",
  "build",
  "dist",
  "docs/_build",
  "notebook"
]
per-file-ignores = [
  "e3nn/o3/cartesian_spherical_harmonics.py: E226",
]

[tool.coverage.run]
source = ["e3nn"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "torch.jit.script",
    "raise",
    "except",
]

[tool.pylint.typecheck]
generated-members = "numpy.*,torch.*"

[tool.pylint."messages control"]
disable = [
  "protected-access",
  "no-else-return",
  "raise-missing-from",
  "invalid-name",
  "duplicate-code",
  "import-outside-toplevel",
  "missing-docstring",
  "bad-continuation",
  "locally-disabled",
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-instance-attributes",
  "too-many-local-variables",
  "too-many-locals",
  "too-many-branches",
  "too-many-statements",
  "too-many-return-statements",
  "redefined-builtin",
  "redefined-outer-name",
  "line-too-long",
  "fixme",
]
