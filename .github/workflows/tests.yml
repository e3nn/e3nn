name: Check Syntax and Run Tests

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install flake8
      run: |
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82,E251,F811,E302,E261,E231,F401,F841,W293,W291,W605,W292,W391,E128,E305,W503,W504,E303,E125,E121,E123,E203,F541 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 e3nn --count --exit-zero --statistics --ignore=E741,E743,E501,C901
    - name: Install dependencies
      env:
        TORCH: "1.7.0"
        CUDA: "cpu"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install torch==${TORCH} torchvision torchaudio -f https://download.pytorch.org/whl/cpu/torch_stable.html
        pip install torch-scatter -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html
        pip install torch-sparse -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html
        pip install torch-cluster -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html
        pip install torch-spline-conv -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html
        pip install .

        pip install plotly
    - name: Install pytest
      run: |
        pip install pytest pytest-cov
        pip install coveralls
    - name: Test with pytest
      run: |
        coverage run --source=e3nn -m pytest --doctest-modules .
    - name: Upload to coveralls
      if: github.event_name == 'push'
      run: |
        COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_TOKEN }} coveralls
